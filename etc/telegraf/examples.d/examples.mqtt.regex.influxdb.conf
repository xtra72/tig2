# # Telegraf Configuration
# # 어떤 선택이 있고 어떻게 쓰는지를 보여주는 예시 모음
# [[inputs.mqtt_consumer]]
#   servers = [ "tcp://52.79.46.56:1883" ] # tcp, ssl, or ws
#   topics  = [
#     "v1/tb/#",
#   ]
#
#   name_override = "signal"
#   topic_tag = "topic" # no topic tag if topic_tag = "" 
#   qos = 0
#   persistent_session = false
#   client_id = ""
#   connection_timeout = "30s"
#   max_undelivered_messages = 1000
#   username = "telegraf"
#   password = "metricsmetricsmetricsmetrics"
#   tls_ca = "/etc/telegraf/ca.pem"
#   tls_cert = "/etc/telegraf/cert.pem"
#   tls_key = "/etc/telegraf/key.pem"
#   insecure_skip_verify = false # Use TLS but skip chain & host verification
#
#   ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
#   data_format = "json"
#   json_time_key = "time"
#   json_time_format = "unix_ms"
#   json_query = "@flatten"
#   json_string_fields = [
#     "ip",
#     "netmask",
#     "dns0",
#     "dns1",
#   ]
#
#
# [[processors.regex]]
#   [[processors.regex.tags]]
#     key = "topic"
#     # FML50S-[0-9]+로 끝나는 토픽에서 [0-9]+를 뽑아내는 패턴.
#     # pattern = '^v1/tb/.+\-(?P<id>[0-9]+)$'
#     # /으로 구분되는 토픽에서 첫번째 마디 하나만 잘라내는 패턴 
#     pattern = '^(?P<id>[^/.]+)/.+$'
#     replacement = "${id}"
#     result_key = "gateway"
#
#   [[processors.regex.tags]]
#     key = "topic"
#     # topic=v1/tb/LS산전-531307-TD-11로 끝나는 토픽에서 [0-9]+를 뽑아낸 패턴.
#     pattern = '^v1/tb/.+\-(?P<id>[0-9]+-.+)$'
#     replacement = "${id}"
#     result_key = "gateway"
#
# [[outputs.influxdb]]
#   # urls = ["unix:///var/run/influxdb.sock"]
#   # urls = ["udp://127.0.0.1:8089"]
#   urls = ["http://influxdb:8086"]
#   database = "ls_electric"
#
#   # The value of this tag will be used to determine the database.  If this
#   # tag is not set the 'database' option is used as the default.
#   database_tag = ""
#
#   # If true, the 'database_tag' will not be included in the written metric.
#   exclude_database_tag = false
#
#   ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
#   ## Telegraf with a user without permissions to create databases or when the
#   ## database already exists.
#   skip_database_creation = false 
#
#   ## Name of existing retention policy to write to.  Empty string writes to
#   ## the default retention policy.  Only takes effect when using HTTP.
#   retention_policy = ""
#
#   # The value of this tag will be used to determine the retention policy.  If this
#   # tag is not set the 'retention_policy' option is used as the default.
#   retention_policy_tag = ""
#
#   # If true, the 'retention_policy_tag' will not be included in the written metric.
#   exclude_retention_policy_tag = false
#
#   ## Write consistency (clusters only), can be: "any", "one", "quorum", "all".
#   ## Only takes effect when using HTTP.
#   write_consistency = "any"
#
#   ## Timeout for HTTP messages.
#   timeout = "5s"
#
#   ## HTTP Basic Auth
#   username = "futureict"
#   password = "futureict_1101"
#
#   # HTTP User-Agent
#   user_agent = "telegraf"
#
#   # UDP payload size is the maximum packet size to send.
#   udp_payload = "512B"
#
#   # Optional TLS Config for use on HTTP connections.
#   tls_ca = "/etc/telegraf/ca.pem"
#   tls_cert = "/etc/telegraf/cert.pem"
#   tls_key = "/etc/telegraf/key.pem"
#   # Use TLS but skip chain & host verification
#   insecure_skip_verify = false
#
#   # HTTP Proxy override, if unset values the standard proxy environment
#   # variables are consulted to determine which proxy, if any, should be used.
#   http_proxy = "http://corporate.proxy:3128"
#
#   # Additional HTTP headers
#   http_headers = {"X-Special-Header" = "Special-Value"}
#
#   # HTTP Content-Encoding for write request body, can be set to "gzip" to
#   # compress body or "identity" to apply no encoding.
#   content_encoding = "identity"
#
#   # When true, Telegraf will output unsigned integers as unsigned values,
#   # i.e.: "42u".  You will need a version of InfluxDB supporting unsigned
#   # integer values.  Enabling this option will result in field type errors if
#   # existing data has been written.
#   influx_uint_support = false
#   namepass= [
#     "signal",
#   ]
#
#   tagexclude = [ "topic" ]
#
#   [outputs.influxdb.tagpass]
#     topic = [
#       "v1/tb/LS산전*"
#     ]
#
# [[outputs.influxdb]]
#   # urls = ["unix:///var/run/influxdb.sock"]
#   # urls = ["udp://127.0.0.1:8089"]
#   urls = ["http://influxdb:8086"]
#   database = "monorail"
#   skip_database_creation = false 
#   retention_policy = ""
#   write_consistency = "any"
#   timeout = "5s"
#   username = "futureict"
#   password = "futureict_1101"
#
#   namepass= [
#     "signal",
#   ]
#
#   tagexclude = [ "topic" ]
#
#   [outputs.influxdb.tagpass]
#     topic = [
#       "v1/tb/모노레일*"
#     ]
#
# [[outputs.influxdb]]
#   # urls = ["unix:///var/run/influxdb.sock"]
#   # urls = ["udp://127.0.0.1:8089"]
#   urls = ["http://influxdb:8086"]
#   database = "etc"
#   skip_database_creation = false 
#   retention_policy = ""
#   write_consistency = "any"
#   timeout = "5s"
#   username = "futureict"
#   password = "futureict_1101"
#
#   fieldpass = [
#     "rsrp",
#     "rsrq",
#     "rssi",
#     "sinr"
#   ]
#
#   namepass= [
#     "signal",
#   ]
#
#   tagexclude = [ "topic" ]
#
#   [outputs.influxdb.tagpass]
#     topic = [
#       "v1/tb/FML50S*"
#     ]
